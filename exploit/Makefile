# Copyright 2016 FIX94
# This code is licensed to you under the terms of the GNU LGPL, version 3;
# see file LICENSE or http://www.gnu.org/licenses/lgpl-3.0.txt

# Configuration:

# What toolchain prefix should we use
CROSS ?= powerpc-eabi-

ifeq ($(OS),Windows_NT)
	PKMGCHAX = $(CURDIR)/pkmgchax.exe
else
	PKMGCHAX = $(CURDIR)/pkmgchax
endif

# End of configuration.


# Set CC, LD, OBJCOPY based on CROSS, unless they are set already

ifeq ($(origin CC), default)
	CC := $(CROSS)gcc -m32
endif
ifeq ($(origin LD), default)
	LD := $(CROSS)ld
endif
OBJCOPY ?= $(CROSS)objcopy


# The compiler flags we need.

CFLAGS := -Wall -W -O1 -fPIC -ffreestanding -mno-eabi -mno-sdata -mcpu=750


# Build with "V=1" to see the commands executed; be quiet otherwise.

ifeq ($(V),1)
	Q :=
else
	Q := @
	MAKEFLAGS += --no-print-directory
endif


targets := gc6e.gci gc6j.gci gc6p.gci gxxe.gci gxxj.gci gxxp.gci

objs := pokemon.o

all: $(targets)

$(targets): payload.bin
	@echo "  OUTPUT    $@"
	$(Q)cp -f base/$@ save.gci
	$(Q)$(PKMGCHAX)
	$(Q)rm -f save.gci
	$(Q)mv save_out.gci $@

payload.bin: payload.elf
	@echo "  OBJCOPY   $@"
	$(Q)$(OBJCOPY) -Obinary $< $@

payload.elf: pokemon.ld start.o $(objs)
	@echo "  LINK      $@"
	$(Q)$(LD) -T $^ -o $@

start.o: start.S
	@echo "  ASSEMBLE  $@"
	$(Q)$(CC) $(CFLAGS) -c $< -o $@

pokemon.o: pokemon.c
	@echo "  COMPILE   $@"
	$(Q)$(CC) $(CFLAGS) -c $< -o $@

clean:
	-rm -f $(targets) payload.bin payload.elf start.o $(objs) loader.h
